#	makefile for OverKata.x

CC		= gcc
CFLAGS	= -O -fomit-frame-pointer -fstrength-reduce -Wall
#CFLAGS	= -g -O0 -Wall
AS		= has
LD		= hlk
INC		= 
LIBS	= libc.a libgnu.a LIB/APICGLIB.a LIB/ZMUSIC.L
LZH		= OverKata001

#vpath	%.c	./;

#%.o:	%.c
#	$(CC) $(CFLAGS) -c $<

.PHONY: all
all:	OverKata.x 

.PHONY: clean
clean:
	$(RM) *.bak *.s *.o *.x \
	inc/*.bak

execonly:
	$(RM) *.ind *.bak *.s *.o \

OverKata.x:	OverKata.o APL_Math.o Course_Obj.o EnemyCAR.o DMAC.o Draw.o FileManager.o Graphic.o Input.o MFP.o MyCar.o OutPut_Text.o PCG.o Task.o Text.o Trap14.o
	$(LD) $^ -o $@ -l $(LIBS)
#	echo $^ > OverKata.d
#	$(LD) -i OverKata.d -o $@ -l $(LIBS)

OverKata.o:	OverKata.c
	$(CC) $(CFLAGS) -c $<
APL_Math.o:	APL_Math.c
	$(CC) $(CFLAGS) -c $<
Course_Obj.o:	Course_Obj.c
	$(CC) $(CFLAGS) -c $<
EnemyCAR.o:	EnemyCAR.c
	$(CC) $(CFLAGS) -c $<
DMAC.o:	DMAC.c
	$(CC) $(CFLAGS) -c $<
Draw.o:	Draw.c
	$(CC) $(CFLAGS) -c $<
FileManager.o:	FileManager.c
	$(CC) $(CFLAGS) -c $<
Graphic.o:	Graphic.c
	$(CC) $(CFLAGS) -c $<
Input.o:	Input.c
	$(CC) $(CFLAGS) -c $<
MFP.o:	MFP.c
	$(CC) $(CFLAGS) -c $<
MyCar.o:	MyCar.c
	$(CC) $(CFLAGS) -c $<
OutPut_Text.o:	OutPut_Text.c
	$(CC) $(CFLAGS) -c $<
PCG.o:	PCG.c
	$(CC) $(CFLAGS) -c $<
Task.o:	Task.c
	$(CC) $(CFLAGS) -c $<
Text.o:	Text.c
	$(CC) $(CFLAGS) -c $<
Trap14.o:	Trap14.c
	$(CC) $(CFLAGS) -c $<
OverKata.o:	inc/usr_define.h
Graphic.o:	inc/usr_define.h
MFP.o:		inc/usr_define.h

dist:
	LHA a -t $(LZH)

